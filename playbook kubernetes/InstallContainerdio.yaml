---
- name: Install Kubernetes 
  hosts: all
  become: true

  handlers:
    - name: update
      apt:
        update_cache: yes

  tasks:
    - name: check status swap
      command: "swapon --show"
      register: swap_status
      ignore_errors: yes

    - name: deactivate swap
      when: swap_status.rc == 0
      command: "swapoff -a"
      ignore_errors: yes

    - name: deactivate swap permanently
      when: swap_status.rc == 0
      replace:
        path: /etc/fstab
        regexp: "/swap.img"
        replace: "#/swap.img"
        backup: yes

    - name: relode config /etc/fstab
      command: mount -a
      dependencies:
        deactivate swap permanently

    - name: dependensi apps
      apt:
        name: ['curl', 'apt-transport-https', 'ca-certificates', 'conntrack']
        state: latest
      notify: update  
    
    - name: Create directory for Docker apt keyring
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      dependencies:
        dependensi apps

    - name: Download Docker apt key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      
    - name: Add Docker repository to Apt sources
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: 'docker'
      notify: update
      dependencies:
        Add Docker's official GPG key

    - name: inestallation containerd.io
      apt:
        name: containerd.io
        state: latest
      notify: update
      dependencies:
        Add Docker repository to Apt sources

    - name: creat containerd directory
      file: 
        path: /etc/containerd
        state: directory
        ignore_errors: yes
  
    - name: get the output of command containerd config default 
      command: containerd config default
      register: config_output

    - name: save config output to file
      copy:
        content: "{{ config_output.stdout }}"
        dest: /etc/containerd/config.toml     
        force: yes
    
    - name: read the contents of the config.toml
      command: cat /etc/containerd/config.toml
      register: config_file
    - name: cheng value SystemdCgroup in the file config.toml
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
      when: "'SystemdCgroup = false' in config_file.stdout"
    - name: add SystemdCgroup line if it dosen't exist
      lineinfile:
        path: /etc/containerd/config.toml
        line: 'SystemdCgroup = true'
      when: "'SystemdCgroup = false' not in config_file.stdout"

    - name: Reload systemd daemon
      systemd:
        deamon_reload: yes

    - name: Restart containerd service
      service:
        name: containerd
        state: restarted














    